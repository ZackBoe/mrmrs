/* ==========================================================================
   COUNTER INCREMENT

   - Counter Increment
   - Counter Reset
   ========================================================================== */

/* Counter Increment */

.ci-plus {  counter-increment: count; }
.ci-minus { counter-increment: count -1; }
.ci-none {  counter-increment: none; }
.ci-i {     counter-increment: inherit; }


/* Counter Reset */

.cr {       counter-reset: count; }
.cr-minus { counter-reset: count -1; }
.cr-none {  counter-reset: none; }
.cr-i { counter-reset: inherit; }

@include break(not-small) {
  .ci-plus-ns {  counter-increment: count; }
  .ci-minus-ns { counter-increment: count -1; }
  .ci-none-ns {  counter-increment: none; }
  .ci-i-ns {     counter-increment: inherit; }
  .cr-ns {       counter-reset: count; }
  .cr-minus-ns { counter-reset: count -1; }
  .cr-none-ns {  counter-reset: none; }
  .cr-i-ns { counter-reset: inherit; }
}

@include break(medium) {
  .ci-plus-m {  counter-increment: count; }
  .ci-minus-m { counter-increment: count -1; }
  .ci-none-m {  counter-increment: none; }
  .ci-i-m {     counter-increment: inherit; }
  .cr-m {       counter-reset: count; }
  .cr-minus-m { counter-reset: count -1; }
  .cr-none-m {  counter-reset: none; }
  .cr-i-m { counter-reset: inherit; }
}

@include break(large) {
  .ci-plus-l {  counter-increment: count; }
  .ci-linus-m { counter-increment: count -1; }
  .ci-none-l {  counter-increment: none; }
  .ci-i-l {     counter-increment: inherit; }
  .cr-l {       counter-reset: count; }
  .cr-linus-m { counter-reset: count -1; }
  .cr-none-l {  counter-reset: none; }
  .cr-i-l { counter-reset: inherit; }
}
